// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.28.3
// source: proto/key_exchange_service.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос на начало обмена ключами
type InitiateKeyExchangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitiateKeyExchangeRequest) Reset() {
	*x = InitiateKeyExchangeRequest{}
	mi := &file_proto_key_exchange_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitiateKeyExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateKeyExchangeRequest) ProtoMessage() {}

func (x *InitiateKeyExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_key_exchange_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateKeyExchangeRequest.ProtoReflect.Descriptor instead.
func (*InitiateKeyExchangeRequest) Descriptor() ([]byte, []int) {
	return file_proto_key_exchange_service_proto_rawDescGZIP(), []int{0}
}

// Ответ сервера с параметрами для обмена ключами
type InitiateKeyExchangeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Модуль p (большое простое число)
	Prime []byte `protobuf:"bytes,1,opt,name=prime,proto3" json:"prime,omitempty"`
	// Генератор g (примитивный корень по модулю p)
	Generator []byte `protobuf:"bytes,2,opt,name=generator,proto3" json:"generator,omitempty"`
	// Публичный ключ сервера A = g^a mod p
	ServerPublic []byte `protobuf:"bytes,3,opt,name=server_public,json=serverPublic,proto3" json:"server_public,omitempty"`
	// Уникальный идентификатор сессии обмена ключами
	SessionId     string `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitiateKeyExchangeResponse) Reset() {
	*x = InitiateKeyExchangeResponse{}
	mi := &file_proto_key_exchange_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitiateKeyExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateKeyExchangeResponse) ProtoMessage() {}

func (x *InitiateKeyExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_key_exchange_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateKeyExchangeResponse.ProtoReflect.Descriptor instead.
func (*InitiateKeyExchangeResponse) Descriptor() ([]byte, []int) {
	return file_proto_key_exchange_service_proto_rawDescGZIP(), []int{1}
}

func (x *InitiateKeyExchangeResponse) GetPrime() []byte {
	if x != nil {
		return x.Prime
	}
	return nil
}

func (x *InitiateKeyExchangeResponse) GetGenerator() []byte {
	if x != nil {
		return x.Generator
	}
	return nil
}

func (x *InitiateKeyExchangeResponse) GetServerPublic() []byte {
	if x != nil {
		return x.ServerPublic
	}
	return nil
}

func (x *InitiateKeyExchangeResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// Запрос на завершение обмена ключами
type CompleteKeyExchangeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Публичный ключ клиента B = g^b mod p
	ClientPublic []byte `protobuf:"bytes,1,opt,name=client_public,json=clientPublic,proto3" json:"client_public,omitempty"`
	// Идентификатор сессии, полученный в InitiateKeyExchangeResponse
	SessionId     string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteKeyExchangeRequest) Reset() {
	*x = CompleteKeyExchangeRequest{}
	mi := &file_proto_key_exchange_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteKeyExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteKeyExchangeRequest) ProtoMessage() {}

func (x *CompleteKeyExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_key_exchange_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteKeyExchangeRequest.ProtoReflect.Descriptor instead.
func (*CompleteKeyExchangeRequest) Descriptor() ([]byte, []int) {
	return file_proto_key_exchange_service_proto_rawDescGZIP(), []int{2}
}

func (x *CompleteKeyExchangeRequest) GetClientPublic() []byte {
	if x != nil {
		return x.ClientPublic
	}
	return nil
}

func (x *CompleteKeyExchangeRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// Ответ с подтверждением успешного обмена ключами
type CompleteKeyExchangeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Подтверждение успешного создания общего секретного ключа
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Опциональное сообщение об ошибке
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Общий секретный ключ (g^ab mod p)
	SharedSecret  []byte `protobuf:"bytes,3,opt,name=shared_secret,json=sharedSecret,proto3" json:"shared_secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteKeyExchangeResponse) Reset() {
	*x = CompleteKeyExchangeResponse{}
	mi := &file_proto_key_exchange_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteKeyExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteKeyExchangeResponse) ProtoMessage() {}

func (x *CompleteKeyExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_key_exchange_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteKeyExchangeResponse.ProtoReflect.Descriptor instead.
func (*CompleteKeyExchangeResponse) Descriptor() ([]byte, []int) {
	return file_proto_key_exchange_service_proto_rawDescGZIP(), []int{3}
}

func (x *CompleteKeyExchangeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CompleteKeyExchangeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CompleteKeyExchangeResponse) GetSharedSecret() []byte {
	if x != nil {
		return x.SharedSecret
	}
	return nil
}

var File_proto_key_exchange_service_proto protoreflect.FileDescriptor

var file_proto_key_exchange_service_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x65, 0x79, 0x5f, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x22, 0x1c, 0x0a,
	0x1a, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x1b,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x72, 0x69, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x32, 0xe0, 0x01, 0x0a, 0x12, 0x4b, 0x65,
	0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x64, 0x0a, 0x13, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x25, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x25, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b,
	0x2e, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_key_exchange_service_proto_rawDescOnce sync.Once
	file_proto_key_exchange_service_proto_rawDescData = file_proto_key_exchange_service_proto_rawDesc
)

func file_proto_key_exchange_service_proto_rawDescGZIP() []byte {
	file_proto_key_exchange_service_proto_rawDescOnce.Do(func() {
		file_proto_key_exchange_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_key_exchange_service_proto_rawDescData)
	})
	return file_proto_key_exchange_service_proto_rawDescData
}

var file_proto_key_exchange_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_key_exchange_service_proto_goTypes = []any{
	(*InitiateKeyExchangeRequest)(nil),  // 0: messenger.InitiateKeyExchangeRequest
	(*InitiateKeyExchangeResponse)(nil), // 1: messenger.InitiateKeyExchangeResponse
	(*CompleteKeyExchangeRequest)(nil),  // 2: messenger.CompleteKeyExchangeRequest
	(*CompleteKeyExchangeResponse)(nil), // 3: messenger.CompleteKeyExchangeResponse
}
var file_proto_key_exchange_service_proto_depIdxs = []int32{
	0, // 0: messenger.KeyExchangeService.InitiateKeyExchange:input_type -> messenger.InitiateKeyExchangeRequest
	2, // 1: messenger.KeyExchangeService.CompleteKeyExchange:input_type -> messenger.CompleteKeyExchangeRequest
	1, // 2: messenger.KeyExchangeService.InitiateKeyExchange:output_type -> messenger.InitiateKeyExchangeResponse
	3, // 3: messenger.KeyExchangeService.CompleteKeyExchange:output_type -> messenger.CompleteKeyExchangeResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_key_exchange_service_proto_init() }
func file_proto_key_exchange_service_proto_init() {
	if File_proto_key_exchange_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_key_exchange_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_key_exchange_service_proto_goTypes,
		DependencyIndexes: file_proto_key_exchange_service_proto_depIdxs,
		MessageInfos:      file_proto_key_exchange_service_proto_msgTypes,
	}.Build()
	File_proto_key_exchange_service_proto = out.File
	file_proto_key_exchange_service_proto_rawDesc = nil
	file_proto_key_exchange_service_proto_goTypes = nil
	file_proto_key_exchange_service_proto_depIdxs = nil
}
