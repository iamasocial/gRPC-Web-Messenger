syntax = "proto3";

package messenger;

option go_package = "/generated";

service ChatService {
    rpc CreateChat(CreateChatRequest) returns (CreateChatResponse);
    rpc GetChats(GetChatsRequst) returns (GetChatsResponse);
    rpc ConnectToChat(ConnectRequest) returns (ConnectResponse);
    rpc DeleteChat(DeleteChatRequest) returns (DeleteChatResponse);
    rpc Chat(stream ChatMessage) returns (stream ChatResponse);
    rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
    rpc ReceiveMessages(ReceiveMessagesRequest) returns (stream ReceiveMessagesResponse);
}

message CreateChatRequest {
    string username = 1;
    string encryption_algorithm = 2;
    string encryption_mode = 3;
    string encryption_padding = 4;
}

message CreateChatResponse {
    string username = 1;
}

// Информация о чате
message ChatInfo {
    string username = 1;  // Имя собеседника
    string encryption_algorithm = 2;  // Алгоритм шифрования
    string encryption_mode = 3;       // Режим шифрования
    string encryption_padding = 4;    // Тип набивки
}

message GetChatsRequst {}

message GetChatsResponse {
    repeated ChatInfo chats = 1;  // Список информации о чатах
}

message DeleteChatRequest {
    string username = 1;
}

message DeleteChatResponse {
    bool success = 1;
}

message ConnectRequest {
    string receiverusername = 1;
}

message ConnectResponse {
    bool success = 1;
}

message ChatMessage {
    string content = 1;
}

message ChatResponse {
    string senderusername = 1;
    string content = 2;
    int64 timestamp = 3;
}

message SendMessageRequest {
    string content = 1;
}

message SendMessageResponse {
    string senderUsername = 1;
    string content = 2;
    int64 timestamp = 3;
}

message ReceiveMessagesRequest {
    string senderusername = 1;
}

message ReceiveMessagesResponse {
    string senderUsername = 1;
    string content = 2;
    int64 timestamp = 3;
}